name: Build and deploy Node.js app to Azure Web App - jobsite-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install, build, and test backend
        run: |
          cd backend
          npm install
          npm run build --if-present
          #npm run test --if-present

      - name: Install, build, and test frontend
        run: |
          cd frontend
          npm install
          npm run build --if-present
          #npm run test --if-present

      - name: Compress build artifacts
        run: |
          tar -czf backend.tar.gz backend
          tar -czf frontend.tar.gz frontend

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            backend.tar.gz
            frontend.tar.gz

      - name: Upload start_project.sh artifact
        uses: actions/upload-artifact@v4
        with:
          name: start-script
          path: start_project.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Download start script artifact
        uses: actions/download-artifact@v4
        with:
          name: start-script

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_167DC4F5B65840DD9F8A6DB9A18924C0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_93C5A1B5288B4820B4AD1814C993E7A7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A6B92DF7F30F4DF08FC0E26FF1C3879D }}

      - name: Ensure /home/site/wwwroot exists
        run: |
          sudo apt-get install sshpass  # Install sshpass if not already installed
          sshpass -p ${{ secrets.AZURE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@jobsite-app.scm.azurewebsites.net "mkdir -p /home/site/wwwroot"
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}


      - name: Decompress build artifacts
        run: |
          scp backend.tar.gz $AZURE_USERNAME@jobsite-app.scm.azurewebsites.net:/home/site/wwwroot/
          scp frontend.tar.gz $AZURE_USERNAME@jobsite-app.scm.azurewebsites.net:/home/site/wwwroot/
          ssh $AZURE_USERNAME@jobsite-app.scm.azurewebsites.net "tar -xzf /home/site/wwwroot/backend.tar.gz -C /home/site/wwwroot/ && tar -xzf /home/site/wwwroot/frontend.tar.gz -C /home/site/wwwroot/"
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}

      - name: Run post-deployment script
        run: |
          # Ensure the script is executable
          ssh $AZURE_USERNAME@jobsite-app.scm.azurewebsites.net "chmod +x /home/site/wwwroot/start_project.sh"
    
          # Run the script on the Azure Web App
          ssh $AZURE_USERNAME@jobsite-app.scm.azurewebsites.net "/home/site/wwwroot/start_project.sh"
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}